{
  "openapi": "3.0.0",
  "info": {
    "title": "Assembly API",
    "description": "Assembly (formely PromisePay) is a powerful payments engine custom-built for marketplaces.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://test.api.promisepay.com",
      "description": "Pre-live environment",
      "variables": {}
    },
    {
      "url": "https://secure.api.promisepay.com",
      "description": "Production environment",
      "variables": {}
    }
  ],
  "paths": {
    "/addresses/{id}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Show Address",
        "description": "Show details of a specific Address using a given ID.",
        "operationId": "ShowAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Address ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/request_token": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "/request_token",
        "description": "/request_token",
        "operationId": "/requestToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/request_session_token": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "/request_session_token",
        "description": "/request_session_token",
        "operationId": "/requestSessionToken",
        "parameters": [
          {
            "name": "current_user_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_name",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_item_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_type_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fee_ids",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_email",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_firstname",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_lastname",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_country",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_seller_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_email",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_firstname",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_lastname",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_country",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_buyer",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts/{id}": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Show Bank Account",
        "description": "Show details of a specific **Bank Account** using a given `:id`.",
        "operationId": "ShowBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/BankAccountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Redact Bank Account",
        "description": "Redact a **Bank Account** using a given `:id`. Redacted **Bank Accounts** can no longer be used as a funding source or a Disbursement destination.\n",
        "operationId": "RedactBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts/{id}/penny_send": {
      "patch": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Send Penny Amount",
        "description": "When penny verification is enabled, this API call sends two penny transactions to the specified bank account for verification. **Note**: This API call is not required when your platform has automatic penny verification enabled, as this is instead done by the system. Penny credit verification is only supported for US platforms.\n",
        "operationId": "SendPennyAmount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/BankAccountsPennySendResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts/{id}/transactions": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "/bank_accounts/:id/transactions",
        "description": "/bank_accounts/:id/transactions",
        "operationId": "/bankAccounts/:id/transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts": {
      "post": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Create Bank Account",
        "description": "Create a **Bank Account** to be used as either a funding source or a Disbursement destination. Store the returned `:id` and use it for a `make_payment` **Item Action** call. The `:id` is also referred to as a `token` when involving **Bank Accounts**.\n",
        "operationId": "CreateBankAccount",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_name",
            "in": "query",
            "description": "Bank name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_name",
            "in": "query",
            "description": "Account name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "routing_number",
            "in": "query",
            "description": "*Required conditionally* - Routing number / SWIFT code / BSB number. See Bank account formats by country.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_number",
            "in": "query",
            "description": "Account number / IBAN. See Bank account formats by country.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_type",
            "in": "query",
            "description": "Bank account type (savings or checking)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AccountType17"
              }
            }
          },
          {
            "name": "holder_type",
            "in": "query",
            "description": "Holder type (personal or business)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HolderType18"
              }
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "ISO 3166-1 alpha-3 country code (3 char)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "payout_currency",
            "in": "query",
            "description": "ISO 4217 alpha-3 currency code. This parameter determines the currency with which funds are paid out.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "ISO 4217 alpha-3 currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/BankAccountsResponse19"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts/{id}/penny_verify": {
      "patch": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Verify Penny Amount",
        "description": "When penny verification is enabled, this API call verifies the two penny transactions that were sent to a specified bank account using **Send Penny Amount**. **Note**: This API call requires you to provide a front-end interface to your end-users into which they can input the penny amounts required for a successful verification. Your front-end interface should then pass the information into this API call. Penny credit verification is only supported for US platforms. \n",
        "operationId": "VerifyPennyAmount",
        "parameters": [
          {
            "name": "amount_1",
            "in": "query",
            "description": "First penny amount in cents. Can range from 1 to 30 cents.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount_2",
            "in": "query",
            "description": "Second penny amount in cents. Can range from 1 to 30 cents.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bank account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/BankAccountsPennyVerifyResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/bank_accounts/{id}/users": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Show Bank Account User",
        "description": "Show the **User** the **Bank Account** is associated with using a given `:id`.",
        "operationId": "ShowBankAccountUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/BankAccountsUsersResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions": {
      "get": {
        "tags": [
          "Batch Transactions"
        ],
        "summary": "List Batch Transactions",
        "description": "Retrieve an ordered and paginated list of existing **Batch Transactions**. The list can be filtered by **Account**, **Batch ID**, **Item**, and **Transaction Type**.\n",
        "operationId": "ListBatchTransactions",
        "parameters": [
          {
            "name": "transaction_type",
            "in": "query",
            "description": "The type of transaction.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionType"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank, Card, PayPal or Wallet Account ID.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "description": "Batch ID. This appears on a bank reference.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "item_id",
            "in": "query",
            "description": "Item ID",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "transaction_type_method",
            "in": "query",
            "description": "The method the transaction was carried out with.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionTypeMethod"
              }
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the transaction.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Direction"
              }
            }
          },
          {
            "name": "reference",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/paypal_accounts": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/paypal_accounts",
        "description": "/batch_transactions/:id/paypal_accounts",
        "operationId": "/batchTransactions/:id/paypalAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/card_accounts": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/card_accounts",
        "description": "/batch_transactions/:id/card_accounts",
        "operationId": "/batchTransactions/:id/cardAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/wallet_accounts": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/wallet_accounts",
        "description": "/batch_transactions/:id/wallet_accounts",
        "operationId": "/batchTransactions/:id/walletAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/bank_accounts": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/bank_accounts",
        "description": "/batch_transactions/:id/bank_accounts",
        "operationId": "/batchTransactions/:id/bankAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/fees": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/fees",
        "description": "/batch_transactions/:id/fees",
        "operationId": "/batchTransactions/:id/fees",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}": {
      "get": {
        "tags": [
          "Batch Transactions"
        ],
        "summary": "Show Batch Transaction",
        "description": "Show Batch Transaction",
        "operationId": "ShowBatchTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/items": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/items",
        "description": "/batch_transactions/:id/items",
        "operationId": "/batchTransactions/:id/items",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/batch_transactions/{id}/users": {
      "get": {
        "tags": [
          "BatchTransactions"
        ],
        "summary": "/batch_transactions/:id/users",
        "description": "/batch_transactions/:id/users",
        "operationId": "/batchTransactions/:id/users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/callbacks/{id}": {
      "get": {
        "tags": [
          "Callbacks"
        ],
        "summary": "Show Callback",
        "description": "Show details of a specific **Callback** using a given `:id`.",
        "operationId": "ShowCallback",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Callback ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "Callbacks"
        ],
        "summary": "Delete Callback",
        "description": "Delete an existing Callback using a given `:id`.",
        "operationId": "DeleteCallback",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Callback ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "tags": [
          "Callbacks"
        ],
        "summary": "Update Callback",
        "description": "Update an existing **Callback** using a given `:id`. You can change the `URL`, the `object_type` and whether the **Callback** is `enabled` or `disabled`.\n",
        "operationId": "UpdateCallback",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "description": "Description to identify the callback",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL to which the callbacks will notify",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object_type",
            "in": "query",
            "description": "Object or entity to which the callbacks refer",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Toggle whether callback is active or inactive",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Callback ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/callbacks": {
      "get": {
        "tags": [
          "Callbacks"
        ],
        "summary": "List Callbacks",
        "description": "Retrieve an ordered and paginated list of all created **Callbacks**.",
        "operationId": "ListCallbacks",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Narrow down records to relevant character string",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Callbacks"
        ],
        "summary": "Create Callback",
        "description": "Create a **Callback** to notify you at the `URL` when the `object_type` changes",
        "operationId": "CreateCallback",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "description": "Description to identify the callback",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL to which the callbacks will notify",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "object_type",
            "in": "query",
            "description": "Object or entity to which the callbacks refer",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "Toggle whether callback is active or inactive",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/card_accounts": {
      "post": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "Create Card Account",
        "description": "Create a Credit **Card Account** to be used as a funding source. Store the returned `:id` and use it for a `make_payment` **Item Action** call. The `:id` is also referred to as a **token** when involving Credit Cards.\n",
        "operationId": "CreateCardAccount",
        "parameters": [
          {
            "name": "full_name",
            "in": "query",
            "description": "User full name with at least a space",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "Account number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expiry_month",
            "in": "query",
            "description": "Expiry month (MM)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expiry_year",
            "in": "query",
            "description": "Expiry year (YYYY)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cvv",
            "in": "query",
            "description": "CVV / CVC",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/CardAccountsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/card_accounts/{id}/users": {
      "get": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "Show Card Account User",
        "description": "Show the **User** the Credit **Card Account** is associated with using a given `:id`.",
        "operationId": "ShowCardAccountUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/card_accounts/{id}/verify": {
      "patch": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "Verify Card",
        "description": "Where pre-authentication is enabled on a platform, verifies a **Card Account** when a **Card Account** is successfully verified, its verification status is `verified`.",
        "operationId": "VerifyCard",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/card_accounts/{id}/transactions": {
      "get": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "/card_accounts/:id/transactions",
        "description": "/card_accounts/:id/transactions",
        "operationId": "/cardAccounts/:id/transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/card_accounts/{id}": {
      "get": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "Show Card Account",
        "description": "Show details of a specific Credit **Card Account** using a given `:id`. You can toggle the card account number display to show the first 6 digits in addition to the last 4 digits. Contact Assembly if you want to toggle the card account display. \n",
        "operationId": "ShowCardAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Card account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "Card Accounts"
        ],
        "summary": "Redact Card Account",
        "description": "Redact a Credit **Card Account** using a given `:id`. Redacted Credit **Card Accounts** can no longer be used as a funding source.\n",
        "operationId": "RedactCardAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "List Companies",
        "description": "Retrieve an ordered and paginated list of existing **Companies**.",
        "operationId": "ListCompanies",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company",
        "description": "Create a **Company** associated with the **User** using a given `user_id`. **Note**: Some parameters are required for KYC. See our guide on Onboarding a Seller for more information.\n",
        "operationId": "CreateCompany",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Company name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal_name",
            "in": "query",
            "description": "Company legal name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tax_number",
            "in": "query",
            "description": "ABN / Tax number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "charge_tax",
            "in": "query",
            "description": "Charge GST or not?",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line1",
            "in": "query",
            "description": "Address line 1",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line2",
            "in": "query",
            "description": "Address line 2",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "City",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "ZIP",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "3 digit country code (eg. AUS)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Company phone number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID to associate with the company",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Show Company",
        "description": "Show details of a specific **Company** using a given `:id`.",
        "operationId": "ShowCompany",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Company ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Update Company",
        "description": "Update an existing **Company** attributes using a given `:id`.",
        "operationId": "UpdateCompany",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Company name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "legal_name",
            "in": "query",
            "description": "Company legal name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tax_number",
            "in": "query",
            "description": "ABN / Tax number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "charge_tax",
            "in": "query",
            "description": "Charge GST or not?",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line1",
            "in": "query",
            "description": "Address line 1",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line2",
            "in": "query",
            "description": "Address line 2",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "City",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "ZIP",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "3 digit country code (eg. AUS)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Company phone number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID company is associated with",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Company ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/direct_debit_authorities": {
      "get": {
        "tags": [
          "Direct Debit Authorities"
        ],
        "summary": "List Direct Debit Authorities",
        "description": "Retrieve an ordered and paginated list of existing **Direct Debit Authorities**.",
        "operationId": "ListDirectDebitAuthorities",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank account ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Direct Debit Authorities"
        ],
        "summary": "Create Direct Debit Authority",
        "description": "Create a **Direct Debit Authority** associated with a **Bank Account**. The **Direct Debit Authority** is required to use a **Bank Account** as a funding source (Direct Debit/ACH).\n",
        "operationId": "CreateDirectDebitAuthority",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank account ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount for direct debit in cents",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/direct_debit_authorities/{id}": {
      "get": {
        "tags": [
          "Direct Debit Authorities"
        ],
        "summary": "Show Direct Debit Authority",
        "description": "Show details of a specific **Direct Debit Authority** using a given `:id`.",
        "operationId": "ShowDirectDebitAuthority",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Direct debit authority ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/fees": {
      "get": {
        "tags": [
          "Fees"
        ],
        "summary": "List Fees",
        "description": "Retrieve an ordered and paginated list of existing **Fees**.",
        "operationId": "ListFees",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Fees"
        ],
        "summary": "Create fee",
        "description": "Create a **Fee** to be associated with an **Item**. **Fees** will add or subtract from the **Item** amount based on the **User**, payment type or Disbursement account type. **Fees** can be `Fixed` or `Percentage` based. **Fees** can be capped, have a maximum amount and/or a minimum amount.\n",
        "operationId": "CreateFee",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fee_type_id",
            "in": "query",
            "description": "Fee type:\n  1. Fixed\n  2. Percentage\n  3. Percentage with Cap\n  4. Percentage with Min",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/FeeTypeId"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount in cents",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cap",
            "in": "query",
            "description": "Cap the Fee",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "min",
            "in": "query",
            "description": "Minimum Fee",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Maximum Fee",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Who pays the Fee",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/fees/{id}": {
      "get": {
        "tags": [
          "Fees"
        ],
        "summary": "Show Fee",
        "description": "Show details of a specific **Fee** using a given `:id`. If the `item_amount` is specified, the response also shows the `calculated_fee` based on a percentage of the `item_amount`.\n",
        "operationId": "ShowFee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Fee ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "item_amount",
            "in": "query",
            "description": "The cost of the item in cents on which the calculated Fee is based",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/charges": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "List Charges",
        "description": "Retrieve an ordered and paginated list of **Charges**.",
        "operationId": "ListCharges",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/ChargesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Charges"
        ],
        "summary": "Create Charge",
        "description": "Create a **Charge**. **Charges** require a specified **Card Account** or **Bank Account**. You may pass through an existing **User**, or define the `user_id` of the new user that will be associated with the **Charge** and the provided Account. The `user_id` can be left blank if you wish for a new user to be created for the **Charge**, or specified if you wish for a new **User** to be created with the passed `user_id`.\n",
        "operationId": "CreateCharge",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank Account or Card Account ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The cost being charged in cents.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user associated with the account being charged.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "ISO 3166-1 alpha-3 country code of the User being charged.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Description of the Charge being created.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The ID of the User",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fee_ids",
            "in": "query",
            "description": "A comma separated list of fee IDs to apply",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "ISO 4217 alpha-3 currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "retain_account",
            "in": "query",
            "description": "True - Enables the account to be charged in the future. False - Redacts the account after this charge.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "Device Information provided by Assembly client-side SDKs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip_address",
            "in": "query",
            "description": "IP Information provided by Assembly client-side SDKs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_descriptor",
            "in": "query",
            "description": "When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/charges/{id}": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "Show Charge",
        "description": "Show details of a specific **Charge** using a given `:id`.",
        "operationId": "ShowCharge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Charge ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/charges/{id}/status": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "Show Charge Status",
        "description": "Show status of a specific **Charge** using a given `:id`.",
        "operationId": "ShowChargeStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Charge ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/charges/{id}/buyers": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "Show Charge Buyer",
        "description": "Show the buyer **User** associated with the **Charge** using a given `:id`.",
        "operationId": "ShowChargeBuyer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Charge ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/marketplace": {
      "get": {
        "tags": [
          "Marketplaces"
        ],
        "summary": "Show Marketplace",
        "description": "Show details of your **Platform**, providing access to your configuration and related **User** and **Company**.",
        "operationId": "ShowMarketplace",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/paypal_accounts/{id}/users": {
      "get": {
        "tags": [
          "PayPal Accounts"
        ],
        "summary": "Show PayPal Account User",
        "description": "Show the User the **PayPal Account** is associated with using a given `:id`.",
        "operationId": "ShowPaypalAccountUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PayPal account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/paypal_accounts/{id}/transactions": {
      "get": {
        "tags": [
          "PayPal Accounts"
        ],
        "summary": "/paypal_accounts/:id/transactions",
        "description": "/paypal_accounts/:id/transactions",
        "operationId": "/paypalAccounts/:id/transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/paypal_accounts/{id}": {
      "get": {
        "tags": [
          "PayPal Accounts"
        ],
        "summary": "Show PayPal Account",
        "description": "Show details of a specific **PayPal Account** using a given `:id`.",
        "operationId": "ShowPaypalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PayPal account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "PayPal Accounts"
        ],
        "summary": "Redact PayPal Account",
        "description": "Redact a **PayPal Account** using a given `:id`. Redacted **PayPal Accounts** can no longer be used as a Disbursement destination.\n",
        "operationId": "RedactPaypalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "PayPal account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/paypal_accounts": {
      "post": {
        "tags": [
          "PayPal Accounts"
        ],
        "summary": "Create PayPal Account",
        "description": "Create a **PayPal Account** to be used as a Disbursement destination.",
        "operationId": "CreatePaypalAccount",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paypal_email",
            "in": "query",
            "description": "PayPal email address",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pay_in",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/token_auths": {
      "post": {
        "tags": [
          "Token Auth"
        ],
        "summary": "Generate Token",
        "description": "Create a token, either for a bank or a card account, that can be used with the **PromisePay.js** package to securely send Assembly credit card details.",
        "operationId": "GenerateToken",
        "parameters": [
          {
            "name": "token_type",
            "in": "query",
            "description": "Token type ID. use `bank` or `card`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TokenType"
              }
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Buyer or Seller ID (already created)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "Token Auth"
        ],
        "summary": "/session",
        "description": "/session",
        "operationId": "/session",
        "parameters": [
          {
            "name": "session_token",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/tools/routing_number": {
      "get": {
        "tags": [
          "Bank Accounts"
        ],
        "summary": "Validate Routing Number",
        "description": "Validate a US bank routing number before creating an account. This can be used to provide on-demand verification, and further information of the bank information a User is providing.",
        "operationId": "ValidateRoutingNumber",
        "parameters": [
          {
            "name": "routing_number",
            "in": "query",
            "description": "Bank account routing number",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "OK",
                  "$ref": "#/components/schemas/RoutingNumber"
                }
              }
            }
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/tools/status": {
      "get": {
        "tags": [
          "Tools"
        ],
        "summary": "Health check",
        "description": "Displays a health check of the Assembly service.",
        "operationId": "HealthCheck",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List Transactions",
        "description": "Retrieve an ordered and paginated list of **Transactions**.",
        "operationId": "ListTransactions",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank, Card, PayPal or Wallet Account ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "item_id",
            "in": "query",
            "description": "Item ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_type",
            "in": "query",
            "description": "The type of transaction.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TransactionType"
              }
            }
          },
          {
            "name": "transaction_type_method",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the transaction.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Direction"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/items": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id/items",
        "description": "/transactions/:id/items",
        "operationId": "/transactions/:id/items",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/bank_accounts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Show Transaction Bank Account",
        "description": "Show the **Bank Account** associated with the **Transaction** using a given `:id`.",
        "operationId": "ShowTransactionBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id",
        "description": "/transactions/:id",
        "operationId": "/transactions/:id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/card_accounts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id/card_accounts",
        "description": "/transactions/:id/card_accounts",
        "operationId": "/transactions/:id/cardAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/fees": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Show Transaction Fees",
        "description": "Show the **Fees** associated with the **Transaction** using a given `:id`.",
        "operationId": "ShowTransactionFees",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/wallet_accounts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id/wallet_accounts",
        "description": "/transactions/:id/wallet_accounts",
        "operationId": "/transactions/:id/walletAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/users": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id/users",
        "description": "/transactions/:id/users",
        "operationId": "/transactions/:id/users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/transactions/{id}/paypal_accounts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "/transactions/:id/paypal_accounts",
        "description": "/transactions/:id/paypal_accounts",
        "operationId": "/transactions/:id/paypalAccounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "List Disbursements",
        "description": "TBC - Retrieve an ordered and paginated list of existing platform **Disbursements**.",
        "operationId": "ListDisbursements",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Bank, Card, PayPal or Wallet Account ID.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "description": "TBC",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "description": "TBC",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "description": "Batch ID",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement",
        "description": "Show details of a specific **Disbursement** using a given `:id`.",
        "operationId": "ShowDisbursement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/users": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement User",
        "description": "TBC - Show the **User** who received a specifc disbursement.",
        "operationId": "ShowDisbursementUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TBC - Disbursement ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/transactions": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement Transactions",
        "description": "TBC - Shows the transactions included in a specific **Disbursement**.",
        "operationId": "ShowDisbursementTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Disbursement ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/wallet_accounts": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement Wallet Account",
        "description": "TBC - Show the *Wallet Account** that funds were disbursed from.",
        "operationId": "ShowDisbursementWalletAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TBC - Disbursement ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/paypal_accounts": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement PayPal Account",
        "description": "TBC - Show the **PayPal Account** where funds are expected to be disbursed to after batch processing.",
        "operationId": "ShowDisbursementPaypalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TBC - Disbursement ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/items": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement Items",
        "description": "Show Disbursement Items",
        "operationId": "ShowDisbursementItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/disbursements/{id}/bank_accounts": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "summary": "Show Disbursement Bank Account",
        "description": "TBC - Show the **Bank Account** where funds are expected to be disbursed to after batch processing.",
        "operationId": "ShowDisbursementBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "TBC - Disbursement ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/card_accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show User Card Account",
        "description": "Show the user’s active card account using a given `:id`.",
        "operationId": "ShowUserCardAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/payment_account": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "/users/:id/payment_account",
        "description": "/users/:id/payment_account",
        "operationId": "/users/:id/paymentAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show User",
        "description": "Show details of a specific User using a given `:id`.",
        "operationId": "ShowUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update an existing **User’s** attributes using a given `:id`.",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID that can be generated by the platform. Cannot contain ’.’ character.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "Unique to platform.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile",
            "in": "path",
            "description": "International number format. Include ’+’ and no spaces.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line1",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line2",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "path",
            "description": "Postcode",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "path",
            "description": "ISO 3166-1 alpha-3 country code (3 char)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/identity_verified": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Verify User",
        "description": "Sets a user’s KYC state to `approved` on pre-live given the **User** `:id`. Ensure that a **User** has the required KYC information before using this call, otherwise the call will fail. **Note**: This API call will only work in our pre-live environment. The KYC workflow holds for all users in production.\n",
        "operationId": "VerifyUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/bank_accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show User Bank Account",
        "description": "Shows the user’s active bank account using a given `:id`.",
        "operationId": "ShowUserBankAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/disbursement_account": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Set User Disbursement Account",
        "description": "Set the **User’s Disbursement Account** using a given **User** `:id` and one of either a **Bank Account** `:account_id` or a **PayPal Account** `:account_id`.",
        "operationId": "SetUserDisbursementAccount",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account ID (Bank account or PayPal account)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/mobile_pin": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "/users/:id/mobile_pin",
        "description": "/users/:id/mobile_pin",
        "operationId": "/users/:id/mobilePin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "Retrieve an ordered and paginated list of existing **Users**.",
        "operationId": "ListUsers",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Search string",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Create a **User**. **Users** can be associated with **Items** either as a buyer or a seller. **Users** can’t be both the buyer and seller for the same **Item**. **Note**: Some parameters are required for KYC. See our guide on Onboarding a Seller for more information.\n",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique ID that can be generated by the platform. Cannot contain ’.’ character.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Unique to platform.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "ISO 3166-1 alpha-3 country code (3 char)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile",
            "in": "query",
            "description": "International number format. Include ’+’ and no spaces.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line1",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address_line2",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Postcode",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/paypal_accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show User PayPal Account",
        "description": "Show a **User’s PayPal Account** using a given `:id`.",
        "operationId": "ShowUserPaypalAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/items": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List User Items",
        "description": "Retrieve an ordered and paginated list of existing **Items** the **User** is associated with using a given `:id`.",
        "operationId": "ListUserItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{id}/wallet_accounts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show User Wallet Account",
        "description": "Show the **User’s Wallet Account** using a given `:id`.",
        "operationId": "ShowUserWalletAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}/users": {
      "get": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "/wallet_accounts/:id/users",
        "description": "/wallet_accounts/:id/users",
        "operationId": "/walletAccounts/:id/users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}/disbursements": {
      "get": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "List Wallet Disbursements",
        "description": "TBC - List all disbursements generated for a **Wallet Account**.",
        "operationId": "ListWalletDisbursements",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batch_id",
            "in": "query",
            "description": "TBC",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "description": "TBC",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "description": "TBC",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}/transactions": {
      "get": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "List Wallet Transactions",
        "description": "TBC - List all transactions made from a **Wallet Account**.",
        "operationId": "ListWalletTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_start",
            "in": "query",
            "description": "TBC",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "TBC",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}/withdraw": {
      "post": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "Withdraw Funds",
        "description": "Withdraw funds from a **Wallet Account** to a specified disbursement account.",
        "operationId": "WithdrawFunds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Account to withdraw to.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount (in cents) to withdraw.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}/deposit": {
      "post": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "Deposit Funds",
        "description": "Deposit funds to a **Wallet Account** from a specified payment account.",
        "operationId": "DepositFunds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "Account to deposit from.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "path",
            "description": "Amount (in cents) to deposit.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/wallet_accounts/{id}": {
      "get": {
        "tags": [
          "Wallet Accounts"
        ],
        "summary": "Show Wallet Account",
        "description": "Show details of a specific **Wallet Account** using a given `:id.`",
        "operationId": "ShowWalletAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List Items",
        "description": "List Items",
        "operationId": "ListItems",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to offset. Required for pagination.",
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0,
              "example": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to retrieve. Up to 200.",
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 10,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create Item",
        "description": "Create an **Item**. Items require two **Users**, a buyer and a seller. The payment type can be one of **Escrow**, **Express**, **Escrow Partial Release** or **Approve**. The `buyer_id` and `seller_id` are your unique user identifiers.\n",
        "operationId": "CreateItem",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Unique ID that can be generated by the platform. Cannot contain ’.’ character. Contact Assembly support if you want item IDs to be generated automatically.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "A name for the item",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The cost in cents",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_type",
            "in": "query",
            "description": "Payment type:\n  1. Escrow\n  2. Express\n  3. Escrow Partial Release\n  4. Approve",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/PaymentType"
            }
          },
          {
            "name": "buyer_id",
            "in": "query",
            "description": "Marketplace buyer ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_id",
            "in": "query",
            "description": "Marketplace / Seller ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fee_ids",
            "in": "query",
            "description": "A comma separated list of fee IDs to apply",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency code. ISO 4217 alpha-3 currency code. This is an optional field and if not provided, the item will be created with the default currency of the marketplace.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "A description of the item",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_url",
            "in": "query",
            "description": "Link for the buyer CTA",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_url",
            "in": "query",
            "description": "Link for the seller CTA",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tax_invoice",
            "in": "query",
            "description": "Toggle to generate tax invoice once Item is complete",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "due_date",
            "in": "query",
            "description": "When the Item payment is due (DD/MM/YYYY)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_descriptor",
            "in": "query",
            "description": "When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item",
        "description": "Show details of a specific **Item** using a given `:id`.",
        "operationId": "ShowItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Delete Item",
        "description": "Delete an existing **Item** using a given `:id`.",
        "operationId": "DeleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "tags": [
          "Items"
        ],
        "summary": "Update Item",
        "description": "Update an existing **Items** attributes using a given `:id`. Note: An item can only be updated if it’s in `pending` state. Once an item has begun a payment process, you cannot update it.\n",
        "operationId": "UpdateItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The cost in cents",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "A name for the item",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "A description of the item",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "buyer_id",
            "in": "query",
            "description": "Marketplace buyer ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "seller_id",
            "in": "query",
            "description": "Marketplace / seller ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_descriptor",
            "in": "query",
            "description": "When `custom_descriptors` are enabled, this is the information to appear on credit card and direct debit statements.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/paypal_details": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "/items/:id/paypal_details",
        "description": "/items/:id/paypal_details",
        "operationId": "/items/:id/paypalDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/sellers": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item Seller",
        "description": "Show the seller **User** associated with the **Item** using a given `:id`.",
        "operationId": "ShowItemSeller",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/buyers": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item Buyer",
        "description": "Show the buyer **User** associated with the **Item** using a given `:id`.",
        "operationId": "ShowItemBuyer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/fees": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item Fees",
        "description": "Show the **Fees** associated with the **Item** using a given `:id`.",
        "operationId": "ShowItemFees",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/wire_details": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item Wire Details",
        "description": "Show the **Item** wire payment details using a given `:id`.",
        "operationId": "ShowItemWireDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/request_release": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Request Release",
        "description": "Request release of funds held in escrow, from an **Item** with an **Escrow** or **Escrow Partial Release** payment type. This will transition the **Item** state to `work_completed`.",
        "operationId": "RequestRelease",
        "parameters": [
          {
            "name": "release_amount",
            "in": "query",
            "description": "For partial releases, in cents",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/paypal_checkout": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "/items/:id/paypal_checkout",
        "description": "/items/:id/paypal_checkout",
        "operationId": "/items/:id/paypalCheckout",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayerId",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/transactions": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "List Item Transactions",
        "description": "Retrieve an ordered and paginated list of **Transactions** associated with the **Item** using a given `:id`.",
        "operationId": "ListItemTransactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/status": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item Status",
        "description": "Show the status of an **Item** using a given `:id`.",
        "operationId": "ShowItemStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/bpay_details": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Show Item BPay Details",
        "description": "Show the **Item** BPay payment details using a given `:id`.",
        "operationId": "ShowItemBpayDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/make_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Make Payment",
        "description": "Make a payment for an **Item**. Pass the `:account_id` of a **Bank Account** or a **Card Account** associated with the **Item’s** buyer. The **Item** state will transition to one of `payment_held`, `payment_pending`, `payment_deposited` for an **Escrow** or **Escrow Partial Release** payment type. The **Item** state will transition to one of `payment_held`, `payment_pending` or `completed` for an **Express** or **Approve** payment type.\n",
        "operationId": "MakePayment",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Account id of the bank account/credit card, etc making payment (not user id)",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/request_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Request Payment",
        "description": "Request payment for an **Item**. This can trigger an email or an SMS with instructions for payment. Contact Support if you require email or SMS notifications configured. This will transition the **Item** state to `payment_required`.\n",
        "operationId": "RequestPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/release_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Release Payment",
        "description": "Release funds held in escrow from an **Item** with an **Escrow** or **Escrow Partial Release** payment type. This will transition the **Item** state to `completed`.",
        "operationId": "ReleasePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "release_amount",
            "in": "query",
            "description": "For partial releases, in cents",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flag_release",
            "in": "query",
            "description": "If release flagging enabled for your marketplace",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/cancel": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Cancel",
        "description": "Cancel an **Item**. This will transition the **Item** state to `cancelled`. **Items** can only be cancelled if they haven’t been actioned in any other way.",
        "operationId": "Cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/acknowledge_wire": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Acknowledge Wire Transfer",
        "description": "Acknowledge that funds are being wired for payment. This will transition the Item state to `wire_pending`.",
        "operationId": "AcknowledgeWireTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/acknowledge_paypal": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "/items/:id/acknowledge_paypal",
        "description": "/items/:id/acknowledge_paypal",
        "operationId": "/items/:id/acknowledgePaypal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/revert_wire": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Revert Wire Transfer",
        "description": "Revert an `acknowledge wire` *Item Action*. This will transition the **Item** state to `pending`.",
        "operationId": "RevertWireTransfer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/request_refund": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Request Refund",
        "description": "Request a refund for an **Item**. This will transition the **Item** status to `refund_flagged`.",
        "operationId": "RequestRefund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund_amount",
            "in": "query",
            "description": "For partial refunds, if they are enabled for marketplace.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund_message",
            "in": "query",
            "description": "Reason for the request.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/refund": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Refund",
        "description": "Refund an **Item**’s funds held in escrow. An partial `amount` can be specified otherwise the full amount will be refunded. This will transition the **Item** state to ‘refunded’ if the full amount is refunded, or to the previously held state if a partial `amount` is specified.",
        "operationId": "Refund",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund_amount",
            "in": "query",
            "description": "For partial refunds, if they are enabled for marketplace.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refund_message",
            "in": "query",
            "description": "Reason for the request.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/send_tax_invoice": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Send Tax Invoice",
        "description": "Email a Tax Invoice to the **User** associated with the **Item**.",
        "operationId": "SendTaxInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/raise_dispute": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Raise Dispute",
        "description": "Raise a dispute for the **Item**. This will transition the **Item** state to `problem_flagged`.",
        "operationId": "RaiseDispute",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "description": "External ID of user raising dispute",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/request_tax_invoice": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Request Tax Invoice",
        "description": "Request a Tax Invoice be sent to the **Users** associated with an **Item**.",
        "operationId": "RequestTaxInvoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/authorize_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Authorize Payment",
        "description": "Where pre-authentication is enabled on a platform, initiates a credit card payment authorization for an item. When an authorization is successful, your platform holds the item amount for capture, but there is no transfer of funds happening. This call is used with the Capture Payment or Void Payment calls.\n",
        "operationId": "AuthorizePayment",
        "parameters": [
          {
            "name": "account_id",
            "in": "query",
            "description": "Card account ID",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/capture_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Capture Payment",
        "description": "Where pre-authentication is enabled on a platform, completes a credit card payment for an item whose payment is authorized. This call is used with the Authorize Payment call.\n",
        "operationId": "CapturePayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/items/{id}/void_payment": {
      "patch": {
        "tags": [
          "Item Actions"
        ],
        "summary": "Void Payment",
        "description": "Where pre-authentication is enabled on a platform, voids the `payment_authorized` status for an item. This call is used with the Authorize Payment call. **Note**: Not all payment gateways support the Void Payment API call. In this case, you can wait until a payment authorization expires. A payment authorisation expires after 3 to 6 days if not captured.\n",
        "operationId": "VoidPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Marketplace item ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "httpBasic": []
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "title": "address",
        "type": "object",
        "properties": {
          "addresses": {
            "$ref": "#/components/schemas/Addresses"
          }
        }
      },
      "Addresses": {
        "title": "Addresses",
        "type": "object",
        "properties": {
          "addressline1": {
            "type": "string",
            "example": "100 Main Street"
          },
          "addressline2": {
            "type": "string"
          },
          "postcode": {
            "type": "string",
            "example": "2000"
          },
          "city": {
            "type": "string",
            "example": "Sydney"
          },
          "state": {
            "type": "string",
            "example": "NSW"
          },
          "id": {
            "type": "string",
            "example": "fe602dcf-4175-4f88-b5be-3beb04092dcd"
          },
          "country": {
            "type": "string",
            "example": "Australia"
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Links": {
        "title": "Links",
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "example": "/addresses/fe602dcf-4175-4f88-b5be-3beb04092dcd"
          }
        }
      },
      "BankAccountsResponse": {
        "title": "Bank Accounts Response",
        "type": "object",
        "properties": {
          "bank_accounts": {
            "$ref": "#/components/schemas/BankAccounts"
          },
          "links": {
            "$ref": "#/components/schemas/Links9"
          }
        }
      },
      "BankAccounts": {
        "title": "BankAccounts",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "verification_status": {
            "example": "not_verified",
            "$ref": "#/components/schemas/VerificationStatus"
          },
          "bank": {
            "$ref": "#/components/schemas/Bank"
          }
        }
      },
      "VerificationStatus": {
        "title": "VerificationStatus",
        "enum": [
          "verified",
          "not_verified"
        ],
        "type": "string",
        "example": "verified",
        "x-enum-elements": [
          {
            "name": "verified",
            "description": ""
          },
          {
            "name": "not_verified",
            "description": ""
          }
        ]
      },
      "Bank": {
        "title": "Bank",
        "type": "object",
        "properties": {
          "bank_name": {
            "type": "string",
            "example": "Bank of Australia"
          },
          "country": {
            "type": "string",
            "example": "AUS"
          },
          "account_name": {
            "type": "string",
            "example": "Samuel Seller"
          },
          "routing_number": {
            "type": "string",
            "example": "XXXXX3"
          },
          "account_number": {
            "type": "string",
            "example": "XXX234"
          },
          "holder_type": {
            "example": "personal",
            "$ref": "#/components/schemas/HolderType"
          },
          "account_type": {
            "example": "checking",
            "$ref": "#/components/schemas/AccountType"
          },
          "direct_debit_authority_status": {
            "type": "string",
            "example": "approved"
          }
        }
      },
      "HolderType": {
        "title": "HolderType",
        "enum": [
          "personal",
          "business"
        ],
        "type": "string",
        "example": "personal",
        "x-enum-elements": [
          {
            "name": "personal",
            "description": ""
          },
          {
            "name": "business",
            "description": ""
          }
        ]
      },
      "AccountType": {
        "title": "AccountType",
        "enum": [
          "savings",
          "checking"
        ],
        "type": "string",
        "example": "savings",
        "x-enum-elements": [
          {
            "name": "savings",
            "description": ""
          },
          {
            "name": "checking",
            "description": ""
          }
        ]
      },
      "Links9": {
        "title": "Links9",
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "example": "/bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "user": {
            "type": "string",
            "example": "/bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/users"
          },
          "direct_debit_authorities": {
            "type": "string",
            "example": "/bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/direct_debit_authorities"
          }
        }
      },
      "BankAccountsPennySendResponse": {
        "title": "Bank Accounts Penny Send Response",
        "type": "object",
        "properties": {
          "bank_accounts": {
            "$ref": "#/components/schemas/BankAccounts"
          },
          "links": {
            "$ref": "#/components/schemas/Links9"
          }
        }
      },
      "AccountType17": {
        "title": "account_type17",
        "enum": [
          "savings",
          "checking"
        ],
        "type": "string",
        "example": "savings",
        "x-enum-elements": [
          {
            "name": "savings",
            "description": ""
          },
          {
            "name": "checking",
            "description": ""
          }
        ]
      },
      "HolderType18": {
        "title": "holder_type18",
        "enum": [
          "personal",
          "business"
        ],
        "type": "string",
        "example": "personal",
        "x-enum-elements": [
          {
            "name": "personal",
            "description": ""
          },
          {
            "name": "business",
            "description": ""
          }
        ]
      },
      "BankAccountsResponse19": {
        "title": "Bank Accounts Response19",
        "type": "object",
        "properties": {
          "bank_accounts": {
            "$ref": "#/components/schemas/BankAccounts"
          },
          "links": {
            "$ref": "#/components/schemas/Links25"
          }
        }
      },
      "Links25": {
        "title": "Links25",
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "example": "/bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "user": {
            "type": "string",
            "example": "/bank_accounts/46deb476-c1a6-41eb-8eb7-26a695bbe5bc/users"
          }
        }
      },
      "BankAccountsPennyVerifyResponse": {
        "title": "Bank Accounts Penny Verify Response",
        "type": "object",
        "properties": {
          "bank_accounts": {
            "$ref": "#/components/schemas/BankAccounts"
          },
          "links": {
            "$ref": "#/components/schemas/Links9"
          }
        }
      },
      "BankAccountsUsersResponse": {
        "title": "Bank Accounts Users Response",
        "type": "object",
        "properties": {
          "users": {
            "$ref": "#/components/schemas/Users"
          },
          "links": {
            "$ref": "#/components/schemas/Links36"
          }
        }
      },
      "Users": {
        "title": "Users",
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "full_name": {
            "type": "string",
            "example": "Samuel Seller"
          },
          "email": {
            "type": "string",
            "example": "samuel.seller@assemblypayments.com"
          },
          "mobile": {
            "type": "string",
            "example": "+61491570156"
          },
          "phone": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "color_1": {
            "type": "string"
          },
          "color_2": {
            "type": "string"
          },
          "first_name": {
            "type": "string",
            "example": "Samuel"
          },
          "last_name": {
            "type": "string",
            "example": "Seller"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "5830def0-ffe8-11e5-86aa-5e5517507c66"
          },
          "custom_descriptor": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "example": "AUS"
          },
          "verification_status": {
            "type": "string",
            "example": "pending"
          },
          "held_state": {
            "type": "boolean",
            "example": false
          },
          "roles": {
            "type": "string",
            "example": "customer"
          },
          "dob": {
            "type": "string",
            "example": "encrypted"
          },
          "government_number": {
            "type": "string",
            "example": "encrypted"
          },
          "drivers_license": {
            "type": "string"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "related": {
            "$ref": "#/components/schemas/Related"
          }
        }
      },
      "Related": {
        "title": "Related",
        "type": "object",
        "properties": {
          "addresses": {
            "type": "string",
            "example": "fe602dcf-4175-4f88-b5be-3beb04092dcd"
          }
        }
      },
      "Links36": {
        "title": "Links36",
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "example": "/bank_accounts/5830def0-ffe8-11e5-86aa-5e5517507c66/users"
          },
          "items": {
            "type": "string",
            "example": "/users/5830def0-ffe8-11e5-86aa-5e5517507c66/items"
          },
          "card_accounts": {
            "type": "string",
            "example": "/users/5830def0-ffe8-11e5-86aa-5e5517507c66/card_accounts"
          },
          "paypal_accounts": {
            "type": "string",
            "example": "/users/5830def0-ffe8-11e5-86aa-5e5517507c66/paypal_accounts"
          },
          "bank_accounts": {
            "type": "string",
            "example": "/users/5830def0-ffe8-11e5-86aa-5e5517507c66/bank_accounts"
          },
          "wallet_accounts": {
            "type": "string",
            "example": "/users/5830def0-ffe8-11e5-86aa-5e5517507c66/wallet_accounts"
          }
        }
      },
      "TransactionType": {
        "title": "transaction_type",
        "enum": [
          "payment",
          "refund",
          "disbursement",
          "fee",
          "deposit",
          "withdrawal"
        ],
        "type": "string",
        "example": "payment",
        "x-enum-elements": [
          {
            "name": "payment",
            "description": ""
          },
          {
            "name": "refund",
            "description": ""
          },
          {
            "name": "disbursement",
            "description": ""
          },
          {
            "name": "fee",
            "description": ""
          },
          {
            "name": "deposit",
            "description": ""
          },
          {
            "name": "withdrawal",
            "description": ""
          }
        ]
      },
      "TransactionTypeMethod": {
        "title": "transaction_type_method",
        "enum": [
          "bundle_direct_debit",
          "direct_debit",
          "credit_card",
          "wire_transfer",
          "direct_credit",
          "paypal_payout"
        ],
        "type": "string",
        "example": "bundle_direct_debit",
        "x-enum-elements": [
          {
            "name": "bundle_direct_debit",
            "description": ""
          },
          {
            "name": "direct_debit",
            "description": ""
          },
          {
            "name": "credit_card",
            "description": ""
          },
          {
            "name": "wire_transfer",
            "description": ""
          },
          {
            "name": "direct_credit",
            "description": ""
          },
          {
            "name": "paypal_payout",
            "description": ""
          }
        ]
      },
      "Direction": {
        "title": "direction",
        "enum": [
          "debit",
          "credit"
        ],
        "type": "string",
        "example": "debit",
        "x-enum-elements": [
          {
            "name": "debit",
            "description": ""
          },
          {
            "name": "credit",
            "description": ""
          }
        ]
      },
      "CardAccountsResponse": {
        "title": "Card Accounts Response",
        "type": "object",
        "properties": {
          "card_accounts": {
            "$ref": "#/components/schemas/CardAccounts"
          },
          "links": {
            "$ref": "#/components/schemas/Links43"
          }
        }
      },
      "CardAccounts": {
        "title": "CardAccounts",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          }
        }
      },
      "Card": {
        "title": "Card",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "visa"
          },
          "full_name": {
            "type": "string",
            "example": "Bella Buyer"
          },
          "number": {
            "type": "string",
            "example": "XXXX-XXXX-XXXX-1111"
          },
          "expiry_month": {
            "type": "string",
            "example": "10"
          },
          "expiry_year": {
            "type": "string",
            "example": "2020"
          }
        }
      },
      "Links43": {
        "title": "Links43",
        "type": "object",
        "properties": {
          "self": {
            "type": "string",
            "example": "/card_accounts/930a7f78-6bf6-4f33-8cfc-b82c787b5f83"
          },
          "users": {
            "type": "string",
            "example": "/card_accounts/930a7f78-6bf6-4f33-8cfc-b82c787b5f83/users"
          }
        }
      },
      "FeeTypeId": {
        "title": "fee_type_id",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "example": 1,
        "x-enum-elements": [
          {
            "name": "Enum_1",
            "description": ""
          },
          {
            "name": "Enum_2",
            "description": ""
          },
          {
            "name": "Enum_3",
            "description": ""
          },
          {
            "name": "Enum_4",
            "description": ""
          }
        ]
      },
      "To": {
        "title": "to",
        "enum": [
          "buyer",
          "seller",
          "cc",
          "int_wire"
        ],
        "type": "string",
        "example": "buyer",
        "x-enum-elements": [
          {
            "name": "buyer",
            "description": ""
          },
          {
            "name": "seller",
            "description": ""
          },
          {
            "name": "cc",
            "description": ""
          },
          {
            "name": "int_wire",
            "description": ""
          }
        ]
      },
      "ChargesResponse": {
        "title": "Charges Response",
        "type": "object",
        "properties": {
          "charges": {
            "$ref": "#/components/schemas/Charges"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "Charges": {
        "title": "Charges",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "cb7eafc1-571c-425c-9adc-f56cb585cd68"
          },
          "name": {
            "type": "string",
            "example": "Charge for Delivery"
          },
          "custom_descriptor": {
            "type": "string"
          },
          "custom_data": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "example": "completed"
          },
          "buyer_fees": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "seller_fees": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "credit_card_fee": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 22500
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "example": 20000
          },
          "dynamic_descriptor": {
            "type": "string",
            "example": "ASM*Samuel Seller"
          },
          "account_id": {
            "type": "string",
            "format": "uuid",
            "example": "b49d943f-add0-4d1c-b357-0f1a8fde677c"
          },
          "account_type": {
            "type": "string",
            "example": "credit card"
          },
          "promisepay_fee": {
            "type": "integer",
            "format": "int32",
            "example": 187
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "payment_method": {
            "type": "string",
            "example": "charge"
          },
          "buyer_name": {
            "type": "string",
            "example": "Anonymous Buyer"
          },
          "buyer_email": {
            "type": "string",
            "example": "anonymous+buyer+1@assemblypayments.com"
          },
          "buyer_zip": {
            "type": "string",
            "example": "3000"
          },
          "buyer_country": {
            "type": "string",
            "example": "AUS"
          },
          "related": {
            "$ref": "#/components/schemas/Related48"
          }
        }
      },
      "Related48": {
        "title": "Related48",
        "type": "object",
        "properties": {
          "buyers": {
            "type": "string",
            "example": "064d6800-fff3-11e5-86aa-5e5517507c66"
          },
          "sellers": {
            "type": "string",
            "example": "5830def0-ffe8-11e5-86aa-5e5517507c66"
          }
        }
      },
      "Meta": {
        "title": "Meta",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        }
      },
      "TokenType": {
        "title": "token_type",
        "enum": [
          "bank",
          "card"
        ],
        "type": "string",
        "example": "bank",
        "x-enum-elements": [
          {
            "name": "bank",
            "description": ""
          },
          {
            "name": "card",
            "description": ""
          }
        ]
      },
      "RoutingNumber": {
        "title": "routing_number",
        "type": "object",
        "properties": {
          "routing_number": {
            "$ref": "#/components/schemas/RoutingNumber52"
          }
        }
      },
      "RoutingNumber52": {
        "title": "RoutingNumber52",
        "type": "object",
        "properties": {
          "routing_number": {
            "type": "string",
            "example": "122235821"
          },
          "customer_name": {
            "type": "string",
            "example": "US BANK NA"
          },
          "address": {
            "type": "string",
            "example": "EP-MN-WN1A"
          },
          "city": {
            "type": "string",
            "example": "ST. PAUL"
          },
          "state_code": {
            "type": "string",
            "example": "MN"
          },
          "zip": {
            "type": "string",
            "example": "55107"
          },
          "zip_extension": {
            "type": "string",
            "example": "1419"
          },
          "phone_area_code": {
            "type": "string",
            "example": "800"
          },
          "phone_prefix": {
            "type": "string",
            "example": "937"
          },
          "phone_suffix": {
            "type": "string",
            "example": "6310"
          }
        }
      },
      "PaymentType": {
        "title": "payment_type",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "example": 1,
        "x-enum-elements": [
          {
            "name": "Enum_1",
            "description": ""
          },
          {
            "name": "Enum_2",
            "description": ""
          },
          {
            "name": "Enum_3",
            "description": ""
          },
          {
            "name": "Enum_4",
            "description": ""
          }
        ]
      },
      "Account": {
        "title": "account",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          }
        }
      },
      "BankAccount": {
        "title": "bank_account",
        "type": "object",
        "properties": {
          "bank_accounts": {
            "$ref": "#/components/schemas/BankAccounts"
          }
        }
      },
      "CardAccount": {
        "title": "card_account",
        "type": "object",
        "properties": {
          "card_accounts": {
            "$ref": "#/components/schemas/CardAccounts"
          }
        }
      },
      "PaypalAccounts": {
        "title": "paypal_accounts",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "paypal": {
            "$ref": "#/components/schemas/Paypal"
          }
        }
      },
      "Paypal": {
        "title": "Paypal",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "samuel.seller@assemblypayments.com"
          }
        }
      },
      "WalletAccounts": {
        "title": "wallet_accounts",
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "46deb476-c1a6-41eb-8eb7-26a695bbe5bc"
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "balance": {
            "type": "integer",
            "format": "int32",
            "example": 0
          }
        }
      },
      "Meta72": {
        "title": "meta72",
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "User": {
        "title": "user",
        "type": "object",
        "properties": {
          "users": {
            "$ref": "#/components/schemas/Users"
          }
        }
      },
      "Items": {
        "title": "items",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "100fd4a0-0538-11e6-b512-3e1d05defe78"
          },
          "name": {
            "type": "string",
            "example": "Landscaping Job #001"
          },
          "description": {
            "type": "string",
            "example": "Planting of natives, removal of tree stump."
          },
          "custom_descriptor": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "example": "pending",
            "$ref": "#/components/schemas/State"
          },
          "net_amount": {
            "type": "integer",
            "format": "int32",
            "example": 20000
          },
          "chargedback_amount": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "refunded_amount": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "released_amount": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "buyer_fees": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "seller_fees": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "credit_card_fee": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "paypal_fee": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "seller_url": {
            "type": "string"
          },
          "buyer_url": {
            "type": "string"
          },
          "direct_debit_fee": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "status": {
            "example": "22000",
            "$ref": "#/components/schemas/Status"
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "example": 20000
          },
          "payment_type_id": {
            "type": "integer",
            "format": "int32",
            "example": 2
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "pending_release_amount": {
            "type": "integer",
            "format": "int32",
            "example": 0
          },
          "dynamic_descriptor": {
            "type": "string"
          },
          "deposit_reference": {
            "type": "string",
            "example": "100014013961629"
          },
          "promisepay_fee": {
            "type": "integer",
            "format": "int32",
            "example": 350
          },
          "total_outstanding": {
            "type": "integer",
            "format": "int32",
            "example": 20000
          },
          "total_amount": {
            "type": "integer",
            "format": "int32",
            "example": 20000
          },
          "currency": {
            "type": "string",
            "example": "AUD"
          },
          "payment_method": {
            "type": "string",
            "example": "pending"
          },
          "buyer_name": {
            "type": "string",
            "example": "Bella Buyer"
          },
          "buyer_email": {
            "type": "string",
            "example": "bella.buyer@assemblypayments.com"
          },
          "buyer_country": {
            "type": "string",
            "example": "AUS"
          },
          "seller_name": {
            "type": "string",
            "example": "Samuel Seller"
          },
          "seller_email": {
            "type": "string",
            "example": "samuel.seller@assemblypayments.com"
          },
          "seller_country": {
            "type": "string",
            "example": "AUS"
          },
          "payment_credit_card_enabled": {
            "type": "boolean",
            "example": true
          },
          "payment_direct_debit_enabled": {
            "type": "boolean",
            "example": true
          },
          "related": {
            "$ref": "#/components/schemas/Related48"
          }
        }
      },
      "State": {
        "title": "State",
        "enum": [
          "pending",
          "payment_required",
          "wire_pending",
          "payment_pending",
          "payment_held",
          "payment_authorized",
          "voided",
          "fraud_hold",
          "payment_deposited",
          "work_completed",
          "problem_flagged",
          "problem_resolve_requested",
          "problem_escalated",
          "completed",
          "cancelled",
          "refunded",
          "refund_pending",
          "refund_flagged",
          "off_platform_refunded",
          "partial_completed",
          "partial_paid",
          "off_platform_chargedback"
        ],
        "type": "string",
        "example": "pending",
        "x-enum-elements": [
          {
            "name": "pending",
            "description": ""
          },
          {
            "name": "payment_required",
            "description": ""
          },
          {
            "name": "wire_pending",
            "description": ""
          },
          {
            "name": "payment_pending",
            "description": ""
          },
          {
            "name": "payment_held",
            "description": ""
          },
          {
            "name": "payment_authorized",
            "description": ""
          },
          {
            "name": "voided",
            "description": ""
          },
          {
            "name": "fraud_hold",
            "description": ""
          },
          {
            "name": "payment_deposited",
            "description": ""
          },
          {
            "name": "work_completed",
            "description": ""
          },
          {
            "name": "problem_flagged",
            "description": ""
          },
          {
            "name": "problem_resolve_requested",
            "description": ""
          },
          {
            "name": "problem_escalated",
            "description": ""
          },
          {
            "name": "completed",
            "description": ""
          },
          {
            "name": "cancelled",
            "description": ""
          },
          {
            "name": "refunded",
            "description": ""
          },
          {
            "name": "refund_pending",
            "description": ""
          },
          {
            "name": "refund_flagged",
            "description": ""
          },
          {
            "name": "off_platform_refunded",
            "description": ""
          },
          {
            "name": "partial_completed",
            "description": ""
          },
          {
            "name": "partial_paid",
            "description": ""
          },
          {
            "name": "off_platform_chargedback",
            "description": ""
          }
        ]
      },
      "Status": {
        "title": "Status",
        "enum": [
          22000,
          22100,
          22110,
          22150,
          22175,
          22180,
          22195,
          22190,
          22200,
          22300,
          22400,
          22410,
          22420,
          22500,
          22575,
          22600,
          22610,
          22650,
          22670,
          22700,
          22800,
          22680
        ],
        "type": "integer",
        "example": 22000,
        "x-enum-elements": [
          {
            "name": "Enum_22000",
            "description": ""
          },
          {
            "name": "Enum_22100",
            "description": ""
          },
          {
            "name": "Enum_22110",
            "description": ""
          },
          {
            "name": "Enum_22150",
            "description": ""
          },
          {
            "name": "Enum_22175",
            "description": ""
          },
          {
            "name": "Enum_22180",
            "description": ""
          },
          {
            "name": "Enum_22195",
            "description": ""
          },
          {
            "name": "Enum_22190",
            "description": ""
          },
          {
            "name": "Enum_22200",
            "description": ""
          },
          {
            "name": "Enum_22300",
            "description": ""
          },
          {
            "name": "Enum_22400",
            "description": ""
          },
          {
            "name": "Enum_22410",
            "description": ""
          },
          {
            "name": "Enum_22420",
            "description": ""
          },
          {
            "name": "Enum_22500",
            "description": ""
          },
          {
            "name": "Enum_22575",
            "description": ""
          },
          {
            "name": "Enum_22600",
            "description": ""
          },
          {
            "name": "Enum_22610",
            "description": ""
          },
          {
            "name": "Enum_22650",
            "description": ""
          },
          {
            "name": "Enum_22670",
            "description": ""
          },
          {
            "name": "Enum_22700",
            "description": ""
          },
          {
            "name": "Enum_22800",
            "description": ""
          },
          {
            "name": "Enum_22680",
            "description": ""
          }
        ]
      },
      "Charge": {
        "title": "charge",
        "type": "object",
        "properties": {
          "charges": {
            "$ref": "#/components/schemas/Charges"
          }
        }
      }
    },
    "securitySchemes": {
      "httpBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "httpBasic": []
    }
  ],
  "x-explorer-enabled": true,
  "x-proxy-enabled": true,
  "x-samples-enabled": true,
  "x-samples-languages": [
    "curl",
    "node",
    "ruby",
    "javascript",
    "python"
  ]
}
